stages:
  - build
  - deploy
  - post_validate

variables:
  # Edit group and per-project variables in Gitlab.
  # (Project or Group settings -> CI/CD -> Environment variables)
  DOCKER_DRIVER: 'overlay2'
  MSG_REPO_FILES_DIR: 'SITE FILES WERE ADDED TO THE REPO. ABORTING.\n
    Please remove the contents of sites/default/files from the git repo.\n
    Only .gitignore and/or .htaccess files should be committed to this
    directory.'
  MSG_REPO_FILES_SYMLINK: 'SITE FILES SYMLINK WAS ADDED TO THE REPO. ABORTING.\n
    Please remove the sites/default/files symlink from the git repo.'
  MSG_REPO_SQL: 'SQL FILES WERE ADDED TO THE REPO. ABORTING.\n
    This is a security concern. Please use something such as 
    BFG Repo-Cleaner to remove the offending SQL files.'

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - git config --global user.email "jesse.kahtava@opin.ca"
  - git config --global user.name "Jesse Kahtava"

build:
  image: jessek/alpine_opin_ci:mark_i
  stage: build
  script:
      # Print versions for debugging.
    - php --version
    - composer --version
    - npm --version
    - gulp --version

    # Run sanity checks on the repo.
    # On Acquia .htaccess and/or .gitignore should be the only file(s) in
    # docroot/sites/default/files.
    - if [ $(find docroot/sites/*/files/ -type f | grep -vc '\(.htaccess\|.gitignore\)') -gt 0 ]; then echo $MSG_REPO_FILES_DIR; false; fi
    # On Pantheon there can not be a 'files' symlink.
    - if [[ -L docroot/sites/default/files ]]; then echo $MSG_REPO_FILES_SYMLINK; false; fi
    # There should not be any *.sql files except for a few test ones in core.
    - FIND_SQL_OUTPUT=$(find ./ -path ./docroot/core -prune -o -iname '*.sql' -print); if [ -z "$FIND_SQL_OUTPUT" ]; then true; else echo $MSG_REPO_SQL; echo $FIND_SQL_OUTPUT; false; fi

      # Check that composer.json is valid.
    - composer validate

      # Build theme.
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm ci
    - gulp sass-lint-ci
    - cd -

      # Check Drupal coding standards.
    - ./bin/phpcs --config-set installed_paths vendor/drupal/coder/coder_sniffer
    - ./bin/phpcs -i
    - ./bin/phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md --ignore=node_modules,bower_components,vendor docroot/modules/custom docroot/themes/custom/$THEME_DIR/includes/*.inc docroot/themes/custom/$THEME_DIR/*.theme

acquia_deploy_dev:
  image: jessek/alpine_opin_ci:mark_i
  stage: deploy
  script:
    - git remote add dev_deploy $GIT_DEPLOY_URL
    - git branch
    - git branch -r
    - git checkout develop
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm ci
    - gulp sass
      # This commit will normally fail if the CSS is already up to date.
      # Adding '|| true' keeps it from failing the build.
    - git commit css/ -m 'Recompiled all CSS.' || true
    - cd -
    - git push --force dev_deploy develop

      # For Acquia environments. $DEV_LIVE_URL needs the domain name _without_
      # the http:// or https:// scheme prefix.
    - ssh $ACQUIA_SSH_URL -- "drush @$SITE_ID.dev cr; drush @$SITE_ID.dev ac-domain-purge --email='$ACQUIA_API_EMAIL' --key='$ACQUIA_API_SECRET' $DEV_LIVE_URL"
  only:
    refs:
      - develop
  except:
    variables:
      - $PANTHEON_MACHINE_TOKEN

acquia_deploy_master:
  image: jessek/alpine_opin_ci:mark_i
  stage: deploy
  script:
    - git remote add dev_deploy $GIT_DEPLOY_URL
    - git branch
    - git branch -r
    - git checkout master
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm ci
    - gulp sass
      # This commit will normally fail if the CSS is already up to date.
      # Adding '|| true' keeps it from failing the build.
    - git commit css/ -m 'Recompiled all CSS.' || true
    - cd -
    - git push --force dev_deploy master

      # For Acquia environments. $TEST_LIVE_URL needs the domain name _without_
      # the http:// or https:// scheme prefix.
    - ssh $ACQUIA_SSH_URL -- "drush @$SITE_ID.test cr; drush @$SITE_ID.test ac-domain-purge --email='$ACQUIA_API_EMAIL' --key='$ACQUIA_API_SECRET' $TEST_LIVE_URL"

  only:
    refs:
      - master
  except:
    variables:
      - $PANTHEON_MACHINE_TOKEN

pantheon_deploy:
  image: jessek/alpine_opin_ci:mark_i
  stage: deploy
  script:
    - git remote add dev_deploy $GIT_DEPLOY_URL
    - git branch
    - git branch -r
    - git checkout develop
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm ci
    - gulp sass
      # This commit will normally fail if the CSS is already up to date.
      # Adding '|| true' keeps it from failing the build.
    - git commit css/ -m 'Recompiled all CSS.' || true
    - cd -
    - git push --force dev_deploy develop:master 

      # For Pantheon environments.
    - terminus auth:login --machine-token=$PANTHEON_MACHINE_TOKEN
    - terminus env:clear-cache $SITE_ID.dev

  only:
    refs:
      - develop
      - master 
    variables:
      - $PANTHEON_MACHINE_TOKEN

w3c_validate_dev:
  image: jessek/alpine_opin_ci:mark_i_java
  stage: post_validate
  script: 
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm install
    - gulp w3c-validate --site $DEV_LIVE_URL --username $DEV_LIVE_USERNAME --password $DEV_LIVE_PASSWORD
    - cd -
  allow_failure: true
  only:
    - develop

w3c_validate_stg:
  image: jessek/alpine_opin_ci:mark_i_java
  stage: post_validate
  script: 
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm install
    - gulp w3c-validate --site $TEST_LIVE_URL --username $TEST_LIVE_USERNAME --password $TEST_LIVE_PASSWORD
    - cd -
  allow_failure: true
  only:
    - master

axe_validate_dev:
  image: zenika/alpine-chrome:with-node
  stage: post_validate
  script: 
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm install
    - gulp axe-validate --site $DEV_LIVE_URL
    - cd -
  allow_failure: true
  only:
    - develop

axe_validate_stg:
  image: zenika/alpine-chrome:with-node
  stage: post_validate
  script: 
    - cd $CI_PROJECT_DIR/docroot/themes/custom/$THEME_DIR
    - npm install
    - gulp axe-validate --site $TEST_LIVE_URL
    - cd -
  allow_failure: true
  only:
    - master
